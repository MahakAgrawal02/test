# Email Verification Application Configuration
# 
# Profiles:
# - Default (no profile): Uses H2 in-memory database, email enabled if configured
# - Development: Use 'spring.profiles.active=dev' for H2 database without email
# - Production: Use 'spring.profiles.active=prod' to use MySQL with environment variables
#
# To run in production mode:
# 1. Set environment variables: DB_URL, DB_USERNAME, DB_PASSWORD, JWT_SECRET_KEY, JWT_EXPIRATION
# 2. Run with: java -jar app.jar --spring.profiles.active=prod
# 3. Or set: export SPRING_PROFILES_ACTIVE=prod
#
# To run in development mode (no email):
# 1. Run with: java -jar app.jar --spring.profiles.active=dev
# 2. Or set: export SPRING_PROFILES_ACTIVE=dev

spring.application.name=EmailVerification

server.port=8082

# Database Configuration - with default values for development
# MySQL Configuration (commented out for development)
# spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/email_verification}
# spring.datasource.username=${DB_USERNAME:root}
# spring.datasource.password=${DB_PASSWORD:password}

# H2 In-Memory Database for Development
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# JWT Configuration - with default values for development
security.jwt.secret-key=${JWT_SECRET_KEY:ZmQ0ZGI5NjQ0MDQwY2I4MjMxY2Y3ZmI3MjdhN2ZmMjNhODViOTg1ZGE0NTBjMGM4NDA5NzYxMjdjOWMwYWRmZTBlZjlhNGY3ZTg4Y2U3YTE1ODQ3MDc2ZTBmYTFlZGI0NDYxZDNmM2Y3ZTY1ZGY2ZGRjZDY3ZGE3ZWNmZGYyZjI=}
security.jwt.expiration-time=${JWT_EXPIRATION:86400000}

# Email Configuration - Gmail SMTP
# IMPORTANT: For Gmail, you need to use App Passwords, not your regular password
# 1. Enable 2-Factor Authentication on your Google account
# 2. Generate an App Password: https://myaccount.google.com/apppasswords
# 3. Use the generated 16-character password below
# 
# For development without email, use: spring.profiles.active=dev
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:your-email@gmail.com}
spring.mail.password=${MAIL_PASSWORD:your-app-password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.debug=true