# Environment Variables Template
# Copy this file to .env and fill in your actual values

# Database Configuration
DB_URL=jdbc:mysql://localhost:3306/email_verification
DB_USERNAME=your_db_username
DB_PASSWORD=your_db_password

# JWT Configuration
JWT_SECRET_KEY=your_jwt_secret_key_here_make_it_long_and_secure
JWT_EXPIRATION=86400000

# Email Configuration (Gmail SMTP)
# IMPORTANT: Use App Passwords, not your regular Gmail password
# 1. Enable 2-Factor Authentication on your Google account
# 2. Generate an App Password: https://myaccount.google.com/apppasswords
# 3. Use the generated 16-character password
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-16-character-app-password
MAIL_HOST=smtp.gmail.com
MAIL_PORT=587

# Instructions:
# 1. Copy this file to .env
# 2. Replace the placeholder values with your actual configuration
# 3. For production, ensure these environment variables are set in your deployment environment
# 4. The JWT_SECRET_KEY should be a long, random string (at least 256 bits)
# 5. JWT_EXPIRATION is in milliseconds (86400000 = 24 hours)
#
# Profile Usage:
# - Development (default): Uses H2 in-memory database, no environment variables needed
# - Production: Set SPRING_PROFILES_ACTIVE=prod and ensure all environment variables are set
#
# To run in production mode:
# export SPRING_PROFILES_ACTIVE=prod
# export DB_URL=jdbc:mysql://your-server:3306/your_database
# export DB_USERNAME=your_username
# export DB_PASSWORD=your_password
# export JWT_SECRET_KEY=your_secret_key
# export JWT_EXPIRATION=86400000
# export MAIL_USERNAME=your-email@gmail.com
# export MAIL_PASSWORD=your-app-password
# export MAIL_HOST=smtp.gmail.com
# export MAIL_PORT=587
